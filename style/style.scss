$pixel-color-map: (
  'w': #fff,
  'o': transparent,
  'b': #06f,
  'y': #ff0,
  'l': #000,
  'r': #d00,
  'g': #999,
  'm': #68271f,
  's': #f7ad84,
  'e': #2d2320

);

$pixel-size: 10px !default;

$pixel-art:(
  title: (
    ( o l l o o o o l l o o l o l l l o o l l l o l l l o l l l )
    ( l o o l o o o l o l o l o o l o o o l o o o l o o o l o o )
    ( o l l o o l o l l o o l o o l o o o l o o o l l l o l l l )
    ( l o o l o o o l o l o l o o l o o o l o o o o o l o o o l )
    ( o l l o o o o l l o o l o o l o o o l l l o l l l o l l l )
  ),

  python: (
    (o o o o o o o b b b b b b o o o o o o o)
    (o o o o o o b b b b b b b b o o o o o o)
    (o o o o o o b w b b b b b b o o o o o o)
    (o o o o o o b b b b b b b b o o o o o o)
    (o o o o o o b b b b b b b b o o o o o o)
    (o o o o o o o o o o b b b b o o o o o o)
    (o b b b b b b b b b b b b b y y y y y o)
    (b b b b b b b b b b b b b b y y y y y y)
    (b b b b b b b b b b b b b b y y y y y y)
    (b b b b b b b b b b b b b y y y y y y y)
    (b b b b b b b y y y y y y y y y y y y y)
    (b b b b b b y y y y y y y y y y y y y y)
    (b b b b b b y y y y y y y y y y y y y y)
    (o b b b b b y y y y y y y y y y y y y o)
    (o o o o o o y y y y o o o o o o o o o o)
    (o o o o o o y y y y y y y y o o o o o o)
    (o o o o o o y y y y y y y y o o o o o o)
    (o o o o o o y y y y y y w y o o o o o o)
    (o o o o o o y y y y y y y y o o o o o o)
    (o o o o o o o y y y y y y o o o o o o o)
  ),

  donkeykong: (
    (o o o o o o o o o o m m m m o o o o)
    (o o o o o o o o o m m m m o o o o o)
    (o o o o o o o o m m m m m m m o o o)
    (o o o o o m m r m m m m m s s s o o)
    (o o o o m m m r m m s s m g l o o o)
    (o o o o m m m r m m s s m w l o o o)
    (o o o m m m m m r m m s s s s m s o)
    (o o o m m m m m m r s s s s s s s s)
    (o o m m m m m m m r s s l s s s s s)
    (o o m m m m m m m m r s s l l l l o)
    (o o m m m m e m m m m s s s s s s o)
    (o m m m m m e m m m s r s s s s o o)
    (o m m m m e e m m m s r r m m o o o)
    (o m m m m m s m m m s s r r m m o o)
    (o o m m m m o m m m m o r r m m o o)
    (o m m m m o o o s m m o o r r m m o)
    (o s s s s s o s s s s o o r r s s o)
  )

);

// Function to read the matrix and pixelize it!
@function pixelize($matrix, $size){
    $l: length($matrix); // length of the entire
    $sh: ''; // shadows list
    $i: $l; // length of the line

    // read through the length of the matrix and decide on the box shadow color and position
    @for $i from 1 through $l{
      $row: nth($matrix,$i); //

      @for $j from 1 through length($row){
          $item: nth($row,$j);

          @if map-has-key($pixel-color-map, $item) {
            $sh:  $sh + ($j*$size) + ' ' + ($i*$size) + ' ' + map-get($pixel-color-map, $item);
          } @else {
            @warn 'there is no color specified in "$pixel-color-map" for: "#{$item}"';
          }

        @if not ($j == length($row) and $i == $l) {
          $sh: $sh + ',';
        }
      }
    }

    @return unquote($sh);
}

// Mixin to style each item
@mixin style-item($matrix, $size){
  position: relative; // pixels stack next to each other

  // set width & height of icon based on size of pixels
  width:($size * length(nth($matrix,1)));
  height:($size * length($matrix));

  &:after{
    content: '';

    // position everything from the top left corner
    position: absolute;
    top: (-$size);
    left: (-$size);
    width: $size;
    height: $size;

    // this is where we make the stitch
    box-shadow: pixelize($matrix,$size);
  }
}

// Page styling
body {
  background: #bbb;
}

.eight-bit-art{
  list-style: none;
  margin: 3em auto;
  max-width: 800px;
  padding: 0;
  text-align: center;
  width: 100%;

  li {
    display: inline-block;
    margin: 2em;
  }

   @each $key, $value in $pixel-art{
    &--#{$key}{
      @include style-item($value, $pixel-size);
    }
  }
}

.center {
  margin: auto auto;
}

.content div {
  margin: 50px auto;
}